---
# DB
- hosts: "{{dbservers}}"
  tasks:
    - include_tasks: tasks/load_vars.yml
    - when: "cops_drupal_lifecycle_db"
      become: true
      tags: [cops_drupal_lifecycle_db]
      block:
      - become: true
        become_user: postgres
        block:
          - shell: >-
              psql -t -A -F';;;' -c'\l' | egrep -iq
              "{{cops_postgresql_roles[0].name}}.*{{cops_postgresql_databases[0].db}}"
            failed_when: false
            changed_when: false
            register: cops_setup_databases_test1
            no_log: true
            become_user: postgres
          - set_fact: {cops_no_app_db: "{{cops_setup_databases_test1.rc!=0}}", cacheable: false}
        rescue:
          - set_fact:
              cacheable: false
              cops_drupal_lifecycle_db: >-
                (((not vars.get('SKIP_INSTALL_DB', False)) and
                 ((cops_no_app_db))) or
                 cops_drupal_lifecycle_db|default(false) or
                 (vars.get('FORCE_INSTALL_DB', False)))

- hosts: "{{dbservers}}"
  tags: [db]
  tasks:
    - include_tasks: tasks/load_vars.yml
    - when: "cops_drupal_lifecycle_db|default(false)"
      tags: [cops_drupal_lifecycle_db]
      block:
      - include_tasks: tasks/db.yml
        become: true

