---
# set the cops_drupal_vars var from defaults/main.yml
- include_role: {name: corpusops.roles/vars_registry}
  vars:
    cops_vars_registry_target: cops_drupal
  tags: [drupal, vars, drupal_vars]
- include_jinja_vars:
    name: __GLOBAL__
    content: |
      ---
      {% set p = 'cops_drupal_vars' %}
      {% set _vars = {p: vars[p]} %}
      {% set env = _vars[p].env %}
      {% set _ = env.update(_vars[p].env_overrides) %}
      {% for i, val in vars.get('ansible_env', {}).items() %}
      {%  if not i.startswith(
              ('OLDPWD', 'CWD', 'PWD',
               'TERM', 'USER', 'HOME', 'PS1',
               'PATH', 'ANSIBLE', 'SSH', 'LS')) %}
      {%    set _ = env.update({i: val})%}
      {%  endif %}
      {% endfor %}
      #
      {{ _vars | to_json }}
  tags: [drupal, vars, drupal_vars]
  no_log: true
# generate password on remote box if not found
- include_role:
    name: corpusops.roles/get_secret_variable
  vars:
    _cops_get_secret_variable:
      name: cops_drupal_local_settings_drupal_hash
      path: "{{cops_drupal_vars.data_root}}/secrets"
  when: not cops_drupal_vars.local_settings_drupal_hash
- include_role:
    name: corpusops.roles/get_secret_variable
  vars:
    _cops_get_secret_variable:
      name: cops_drupal_local_settings_site_password
      path: "{{cops_drupal_vars.data_root}}/secrets"
  when: not cops_drupal_vars.local_settings_site_password
- include_jinja_vars:
    name: __GLOBAL__
    content: |
      ---
      {% set p = 'cops_drupal_vars' %}
      {% set _vars = {p: vars[p]} %}
      {% set _ = vars[p].update({
          'local_settings_site_password': cops_drupal_local_settings_site_password,
          'local_settings_drupal_hash': cops_drupal_local_settings_drupal_hash
      }) %}
      {{ _vars | to_json }}
  tags: [drupal, vars, drupal_vars]
  when: >-
    (not cops_drupal_vars.local_settings_site_password or
     not cops_drupal_vars.local_settings_drupal_hash)
  no_log: true
- include_jinja_vars:
    name: __GLOBAL__
    content: |
      ---
      {% set p = 'cops_drupal_vars' %}
      {% set _vars = {p: vars[p]} %}
      #
      {% for n in ['nginx', 'fpm', 'smtp',
                   'local_settings_smtp',
                   'local_settings', 'force'] %}
      {%  set _n = _vars[p].setdefault(n, {}) %}
      {%  for i, val in _vars[p].items() %}
      {%    set pref = n+'_' %}
      {%    if i.startswith(pref) and i not in [pref] %}
      {%      set _ = _n.update({
                pref.join(i.split(pref)[1:]): val}) %}
      {%    endif %}
      {%  endfor %}
      {% endfor %}
      {% set _ = _vars.update({p: vars[p]|copsf_format_resolve}) %}
      #
      {{ _vars | to_json }}
  tags: [drupal, vars, drupal_vars]
  no_log: true
#- debug: {msg: "{{cops_drupal_vars}}"}
#  failed_when: "cops_drupal_vars_debug|default(False)"
#  no_log: "not (cops_drupal_vars_debug|default(False))"
