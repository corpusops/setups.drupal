---
# compute some defaults
- set_fact:
    cacheable: false
    # Set absolute path to app role (for templates path)
    cops_drupal_vrole_path: "{{role_path.replace('_vars', '')}}"
    # port depending on db
    cops_drupal_db___port: |-
        {% if cops_drupal_db_port %}
        {{ cops_drupal_db_port }}
        {% elif cops_drupal_db_type in ['pgsql', 'postgresql'] %}
        5432
        {%else%}
        3306
        {%endif%}
- set_fact:
    cacheable: false
    cops_drupal_db__port: "{{cops_drupal_db___port.strip()}}"

# Generate passwords on remote box if not found in registry
- name: "Setup drupal secrets"
  include_tasks: "{{cops_playbooks}}/utils/set_secret_variables.yml"
  loop_control: {loop_var: secretvariables}
  with_items:
    - variables: "{{cops_drupal_secret_variables}}"
      path: "{{corpusops_vars.config_dir}}/{{cops_drupal_name}}-secrets"
      registry_prefix: cops_drupal_
  no_log: "{{not (cops_vars_debug|default(false))}}"

# Set the cops_drupal_vars var from defaults/main.yml
- name: "drupal registry init"
  include_role: {name: corpusops.roles/vars_registry}
  vars:
    cops_vars_registry_target: cops_drupal
  tags: [drupal, vars, drupal_vars]
  no_log: "{{not (cops_vars_debug|default(false))}}"

# Post process some variables
- name: "drupal registry - postprocess"
  include_jinja_vars:
    content: |
      ---
      {% set p = 'cops_drupal_vars' %}
      {% set _vars = {p: vars[p]} %}
      {% set env = _vars[p].env %}
      {% set _ = env.update(_vars[p].env_overrides) %}
      {# filter user env #}
      {% for i, val in vars.get('ansible_env', {}).items() %}
      {%  if not i.startswith(
              ('OLDPWD', 'CWD', 'PWD',
               'TERM', 'USER', 'HOME', 'PS1',
               'PATH', 'ANSIBLE', 'SSH', 'LS')) %}
      {%    set _ = env.update({i: val})%}
      {%  endif %}
      {% endfor %}
      {{ _vars | to_json }}
  tags: [drupal, vars, drupal_vars]
  no_log: "{{not (cops_vars_debug|default(false))}}"
