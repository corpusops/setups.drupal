---
cops_drupal_php_version: "7.1"
corpusops_core_projects_path: /srv/projects
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_drupal__supereditors_paths: |
  {% set res = [
    vars['cops_drupal_project_root'],
    vars['cops_drupal_data_root']] %}
  {% if ansible_virtualization_type in ['docker'] %}
  {%  set _ = res.extend(['/srv/backups', '/setup']) %}
  {% endif %}
  {{ res | to_json }}
# space separated string of uids to allow to write inside
# project directories (used in development through posix ACLS setter)
cops_drupal__supereditors: >-
  {{ ansible_env.get(
      'SUPEREDITORS', cops_supereditors|default('')
     ) | copsf_splitstrip | to_json }}
cops_drupal_supereditors_paths: "{{vars['cops_drupal__supereditors_paths']}}"
cops_drupal_supereditors: "{{vars['cops_drupal__supereditors']}}"
cops_drupal_deb_packages: "{{vars['cops_drupal_deb_packages___default']}}"
cops_drupal_db_has_postgis: false
cops_drupal_db_has_postgresql: "{{ cops_drupal_db_has_postgis or (
 vars['cops_drupal_db_type'] in ['pgsql'])}}"
cops_drupal_deb_packages___default:
    - unzip
    - xsltproc
    - curl
    - "{{corpusops_localsettings_php_vars['spackages_{0}'.format(cops_drupal_db_type)]}}"
    - "{{ corpusops_localsettings_php_vars.spackages_gd }}"
    - "{{ corpusops_localsettings_php_vars.spackages_cli }}"
    - "{{ corpusops_localsettings_php_vars.spackages_curl }}"
    - "{{ corpusops_localsettings_php_vars.spackages_ldap }}"
    - "{{ corpusops_localsettings_php_vars.spackages_dev }}"
    - "{{ corpusops_localsettings_php_vars.spackages_json }}"
    - "{{ corpusops_localsettings_php_vars.spackages_redis }}"
    - "{{ corpusops_localsettings_php_vars.spackages_gmp }}"
    - "{{ corpusops_localsettings_php_vars.spackages_mbstring }}"
    - "{{ corpusops_localsettings_php_vars.spackages_dom}}"
    - python-passlib
    - sqlite3
    - apache2-utils
    - autoconf
    - automake
    - build-essential
    - bzip2
    - gettext
    - git
    - groff
    - libbz2-dev
    - libcurl4-openssl-dev
    - libdb-dev
    - libgdbm-dev
    - libreadline-dev
    - libfreetype6-dev
    - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libsigc++-2.0-0c2a
    {%- else -%}
    libsigc++-2.0-0v5
    {%- endif -%}"
    - libsqlite0-dev
    - libsqlite3-dev
    - libtiff5
    - libtiff5-dev
    - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
     %}libwebp6{%else
     %}libwebp5{%endif%}"
    - libwebp-dev
    - libssl-dev
    - libtool
    - libxml2-dev
    - libxslt1-dev
    - "{% if ansible_distribution_version|copsf_looseversion <= '14.04'|copsf_looseversion
       %}libopenjpeg2{% elif
        ansible_distribution_version|copsf_looseversion < '18.04'|copsf_looseversion
     %}libopenjpeg5{% else
     %}libopenjp2-7{% endif %}"
    - m4
    - man-db
    - pkg-config
    - poppler-utils
    - wv
    - zlib1g-dev
cops_drupal_rh_packages: "{{vars['cops_drupal_rh_packages___default']}}"
cops_drupal_rh_packages___default: []
# extra conf to add to pgconf (directly added to a tuning conf file (string))
cops_drupal_sysctls: []
cops_drupal_domain: "{{cops_drupal_name}}.corpusops.local"
# for internal monitoring
cops_drupal_query_host: "127.0.0.1"
cops_drupal_internal_host: "127.0.0.1"
cops_drupal_name: 'drupal'
cops_drupal_user: "{{vars['cops_drupal_name']}}-user"
cops_drupal_group: "{{vars['cops_drupal_name']}}-group"
cops_drupal_projects_dir: '{{corpusops_vars.projects_path}}'
cops_drupal_project_sdir: "{{vars['cops_drupal_name']}}"
cops_drupal_project_dir: "{{vars['cops_drupal_projects_dir']}}/{{vars['cops_drupal_project_sdir']}}"
cops_drupal_project_root: "{{vars['cops_drupal_project_dir']}}/project"
cops_drupal_data_root: "{{vars['cops_drupal_project_dir']}}/data"
cops_drupal_cron_root: "/etc/cron.d"
cops_drupal_cron_owner: "root"
cops_drupal_cron_group: "root"
cops_drupal_cfg: "{{vars['cops_drupal_data_root']}}/config"
cops_drupal_fixperms: "{{vars['cops_drupal_project_dir']}}/fixperms.sh"
cops_drupal_fixperms_cron: "/etc/cron.d/{{vars['cops_drupal_name']}}-fixperms"
cops_drupal_admins: "sysadmin@{{vars['cops_drupal_domain']}}"
cops_drupal_tz: "Europe/Paris"
cops_drupal_country: "FR"
cops_drupal_update_status_module: 0
cops_drupal_vncpasswd: "default"
cops_drupal_local_settings_cache: 0
cops_drupal_local_settings_cache_block: 0
cops_drupal_local_settings_reverse_proxy_header: 'HTTP_X_FORWARDED_FOR'
cops_drupal_local_settings_page_compression: 0
cops_drupal_local_settings_js_gzip_compression: 1
cops_drupal_local_settings_css_gzip_compression: 1
cops_drupal_local_settings_page_cache_maximum_age: 21600
cops_drupal_local_settings_drupal_hash: null
cops_drupal_local_settings_site_password: null
cops_drupal_local_settings_account_name: 'admin'
cops_drupal_local_settings_account_email: "root@{{vars['cops_drupal_domain']}}"
cops_drupal_local_settings_site_email: "root@{{vars['cops_drupal_domain']}}"
cops_drupal_local_settings_site_name: "{{vars['cops_drupal_name']}}"
cops_drupal_local_settings_reverse_proxy: 'TRUE'
cops_drupal_local_settings_reverse_proxy_addresses: "array('127.0.0.1', '10.5.0.1')"
cops_drupal_local_settings_image_allow_insecure_derivatives: 0
cops_drupal_local_settings_reroute_email_enable: 0
cops_drupal_local_settings_reroute_email_address: "sysadmin@{{vars['cops_drupal_domain']}}"
cops_drupal_local_settings_image_jpeg_quality: 100
cops_drupal_local_settings_locale_cache_length: 204800
cops_drupal_local_settings_cookie_cache_bypass_adv_cache_lifetime: 300
cops_drupal_local_settings_file_chmod_directory: '02770'
cops_drupal_local_settings_file_chmod_file: '0660'
cops_drupal_local_settings_error_level: 0
cops_drupal_local_settings_preprocess_css: 0
cops_drupal_local_settings_preprocess_js: 0
cops_drupal_local_settings_base_url: 'default'
cops_drupal_local_settings_omit_vary_cookie: 'FALSE'
cops_drupal_local_settings_conf_sync_dir: "{{vars['cops_drupal_project_root']}}/lib/config/sync"
cops_drupal_local_settings_conf_install_dir: "{{vars['cops_drupal_project_root']}}/lib/config/install"
cops_drupal_local_settings_conf_staging_dir: "{{vars['cops_drupal_project_root']}}/lib/config/staging"
cops_drupal_local_settings_conf_todev_dir: "{{vars['cops_drupal_project_root']}}/lib/config/to_dev"
cops_drupal_local_settings_smtp_used: True
cops_drupal_local_settings_smtp_host: '127.0.0.1'
cops_drupal_local_settings_smtp_from: "root@{{vars['cops_drupal_domain']}}"
cops_drupal_local_settings_smtp_fromname: ''
cops_drupal_local_settings_block_cache_bypass_node_grants: 1
cops_drupal_secret_variables:
  - local_settings_site_password
  - local_settings_drupal_hash
cops_drupal_cops_format_resolve_topdb: false
cops_drupal_cops_do_format_resolve: false
cops_drupal_cops_sub_namespaces:
  nginx: {}
  fpm: {}
  s: {}
  lifecycle: {}
  local_settings: {smtp: {}}
  force: {}
  dbsmartbackup: {}
cops_drupal_use_etc_hosts: true
# set to 8 for d8, anything else for others
cops_drupal_drupal_version: 8
# This is "new_site" for the 1st player,
# and "sync" after that (to get the same UUIDs)
cops_drupal_d8_install_mode: "sync"
cops_drupal_drupal_profile: example_profile
cops_drupal_drush_make_opts: "--no-cache --translations={{vars['cops_drupal_drupal_locale']}}"
cops_drupal_drush_make: "profiles/{{vars['cops_drupal_drupal_profile']}}/{{vars['cops_drupal_drupal_profile']}}.make"
cops_drupal_use_microcache: false
cops_drupal_drupal_locale: fr
cops_drupal_drupal_cron_enabled: true
cops_drupal_drupal_xmlrpc_enabled: false
cops_drupal_drupal_authorize_enabled: false
cops_drupal_drupal_update_enabled: false
cops_drupal_drupal_uri_scheme: "http"
cops_drupal_drupal_uri: "{{vars['cops_drupal_drupal_uri_scheme']}}://{{vars['cops_drupal_domain']}}"
cops_drupal_drush_make_args: "profiles/{{vars['cops_drupal_drupal_profile']}}/{{vars['cops_drupal_drupal_profile']}}.make"
# uncomment if you use -- elysia cron --
cops_drupal_fixperms_cron_periodicity: "*/30 * * * *"
# how many minutes before rmoving lock file of a currently running cro
# this can be used outside of drupal, to avoid internal locks and messages
# about cron already running
cops_drupal_cron_activated: true
cops_drupal_cron_periodicity: "*/5 * * * *"
cops_drupal_cron_lock_minutes: 60
cops_drupal_cron_user: "{{vars['cops_drupal_name']}}-php"
cops_drupal_cron_elysia_cmd: >-
  cd {{vars['cops_drupal_project_root']}}/www &&
  ../sbin/drush --root={{vars['cops_drupal_project_root']}}/www
  --uri={{vars['cops_drupal_domain']}} elysia-cron run >${LOG} 2>&1
cops_drupal_cron_mail: true
cops_drupal_cron_cmd:  "{{vars['cops_drupal_cron_elysia_cmd']}}"
cops_drupal_cron_stock_cmd: >-
  cd {{vars['cops_drupal_project_root']}}/www &&
  ../sbin/drush --root={{vars['cops_drupal_project_root']}}/www
  --uri={{vars['cops_drupal_domain']}} cron -y >${LOG} 2>&1
cops_drupal_password: "secret"
# if a special php is needed for drush, set the path here
cops_drupal_modules_dir: "{{vars['cops_drupal_project_root']}}/www/sites/all/modules"
cops_drupal_modules_check: "ctools webform token pathauto"
cops_drupal_php: ''
cops_drupal_tests_selenium_driver_url: "http://127.0.0.1:4444/wd/hub"
# this will force a drush install
# you can also use a data/force_install file for one-time things
cops_drupal_force_install: 0
# this will force a drush make
#  (set to 0 for special manual updates)
cops_drupal_force_update_db: 1
# this will remove maintenance mode after code update
#  (set to 0 for special manual updates, then do not forget the "drush vset maintenance_mode 0")
cops_drupal_force_remove_maintenance: 1
# this will remove the cron suspension after code update
# (set to 0 for special manual updates, then rm data/suspend_cron to re-enable crons)
remove_suspend_cron: 1
cops_drupal_db_prefix: ""
cops_drupal_db_type: pgsql
# CF VAUTS
# cops_drupal_db_role_type: ""
# cops_drupal_db_role: ""
cops_drupal_db_host: "localhost"
cops_drupal_db_name: "{{vars['cops_drupal_name']}}"
cops_drupal_db_password: "{{vars['cops_drupal_db_name']}}"
cops_drupal_db_user: "{{vars['cops_drupal_db_name']}}"
cops_drupal_db_port: null
cops_drupal_db_url: "{{vars['cops_drupal_db_type']}}://{{vars['cops_drupal_db_user']}}:{{vars['cops_drupal_db_password']}}@{{vars['cops_drupal_db_host']}}:{{vars['cops_drupal_db__port']}}/{{vars['cops_drupal_db_name']}}"
# overrides this dir with values of cops_drupal_env !
cops_drupal_env_overrides: {}
cops_drupal_env: {}
#  PGPASSWORD: foobar
cops_drupal_drupal_bind_host: '127.0.0.1'
# templates
## entry point
cops_drupal_provision_dir: /provision_dir
cops_drupal_ep_template: "../templates/app_entry_point"
cops_drupal_ep_playbook: ".ansible/playbooks/site.yml"
# activated in docker compose
cops_drupal_docker_has_db: false
cops_drupal_docker_has_dbsmartbackup: false
cops_drupal_docker_has_drupal: false
cops_drupal_docker_has_nginx: false
cops_drupal_docker_has_elasticseach: false
# global orchestration steps (db, code sync, web & workers prereqs, drupal config)
cops_drupal_become: true
#
cops_drupal_ep_main_ep: "/entry_point"
# service
cops_drupal_service: "php{{vars['cops_drupal_php_version']}}-fpm"
cops_drupal_services: ["{{vars['cops_drupal_service']}}", "nginx"]
# use in docker (via a vault):
cops_drupal_rhandlers: [restart_cops_drupal_systemd, restart_cops_drupal]
cops_drupal_reconfigure_services: |
  {% set ret = [] %}
  {% if ansible_virtualization_type in ['docker'] %}
  {% set _ = ret.append("post-start-{{vars['cops_drupal_service']}}") %}
  {% endif %}
  {{ ret | to_json }}
cops_drupal_activated: true
# Layout, files & configs
cops_drupal_stickymode: "2"
cops_drupal_files: "{{vars['cops_drupal_files___default']}}"
cops_drupal_files___default:
  - {path: "{{vars['cops_drupal_projects_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_drupal_project_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_drupal_project_root']}}",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_data_root']}}",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_cfg']}}",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/vendor",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/lib",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/tests",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/www/sites",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/bin",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/sbin",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_project_root']}}/www",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}751"}
  - {path: "{{vars['cops_drupal_data_root']}}/var",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/sites",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}750"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/sites/default/files",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/log",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}751"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/log/cron",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/log/cron/{{vars['cops_drupal_domain']}}",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
 #- {path: "{{vars['cops_drupal_data_root']}}/var/log/nginx",
 #    owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
 #    state: directory, mode: "{{vars['cops_drupal_stickymode']}}755"}
 # - {path: "{{vars['cops_drupal_data_root']}}/var/log/php",
 #    owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
 #    state: directory, mode: "{{vars['cops_drupal_stickymode']}}755"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/private",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/tmp",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
  - {path: "{{vars['cops_drupal_data_root']}}/var/run",
     owner: "{{vars['cops_drupal_user']}}", group: "{{vars['cops_drupal_group']}}",
     state: directory, mode: "{{vars['cops_drupal_stickymode']}}770"}
  - {src: "{{vars['cops_drupal_project_root']}}/www",                path: "{{vars['cops_drupal_data_root']}}/www",         state: link, force: true}
  - {src: "{{vars['cops_drupal_project_root']}}/lib",                path: "{{vars['cops_drupal_data_root']}}/lib",         state: link, force: true}
  - {src: "{{vars['cops_drupal_project_root']}}/vendor",             path: "{{vars['cops_drupal_data_root']}}/vendor",      state: link, force: true}
  - {src: "{{vars['cops_drupal_project_root']}}/bin",                path: "{{vars['cops_drupal_data_root']}}/bin",         state: link, force: true}
  #
  - {path: "{{vars['cops_drupal_project_root']}}/www/sites/default", src: "{{vars['cops_drupal_data_root']}}/var/sites/default", state: link, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/var",               src: "{{vars['cops_drupal_data_root']}}/var",         state: link, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/log",               src: "{{vars['cops_drupal_data_root']}}/var/log",     state: link, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/private",           src: "{{vars['cops_drupal_data_root']}}/var/private", state: link, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/tmp",               src: "{{vars['cops_drupal_data_root']}}/var/tmp",     state: link, force: true}
  # check these files are NOT present
  - {path: "{{vars['cops_drupal_project_root']}}/sbin/profile_conf.sh", state: absent, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/sbin/composer.lock",   state: absent, force: true}
  - {path: "{{vars['cops_drupal_project_root']}}/www/sites/default/common.settings.php",   state: absent, force: true}
# Config files
cops_drupal_configs: "{{vars['cops_drupal_configs___default']}}"
cops_drupal_config_template_settings: "../templates/default.settings.php"
cops_drupal_config_template_bash_conf: "../templates/local_conf.sh"
cops_drupal_config_template_behat: "../templates/behat.yml"
cops_drupal_configs___default:
  - {src: "{{vars['cops_drupal_config_template_settings']}}",
     dest: "{{vars['cops_drupal_project_root']}}/www/sites/default/settings.php",
     mode: "0640",
     owner: "{{vars['cops_drupal_user']}}",
     group: "{{vars['cops_drupal_group']}}"}
  - {src: "{{vars['cops_drupal_config_template_bash_conf']}}",
     dest: "{{vars['cops_drupal_project_root']}}/sbin/local_conf.sh",
     mode: "0750",
     owner: "{{vars['cops_drupal_user']}}",
     group: "root"}
  - {src: "{{vars['cops_drupal_config_template_behat']}}",
     dest: "{{vars['cops_drupal_project_root']}}/tests/behat.yml",
     mode: "0750",
     owner: "{{vars['cops_drupal_user']}}",
     group: "root"}
cops_drupal_fixperms_configs: "{{vars['cops_drupal_fixperms_configs___default']}}"
cops_drupal_fixperms_configs___default:
  - {src: "../templates/fixperms.sh",
     dest: "{{vars['cops_drupal_fixperms']}}", mode: "0755",
     owner: root, group: root}
cops_drupal_ep_configs: "{{vars['cops_drupal_ep_configs___default']}}"
cops_drupal_ep_configs___default:
  # script to reconfigure image before and after systemd is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{{vars['cops_drupal_reconfigure']}}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{{vars['cops_drupal_service']}}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "{{vars['cops_drupal_ep_template']}}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
# SystemD based reconfigure unit settings
cops_drupal_reconfigure_service_stderr: "journal{% if ansible_virtualization_type in ['docker'] %}+console{%endif%}"
cops_drupal_reconfigure_service_stdout: "journal{% if ansible_virtualization_type in ['docker'] %}+console{%endif%}"
cops_drupal_reconfigure_unit_after: "network.target {{vars['cops_drupal_service']}}.service"
cops_drupal_reconfigure_install_wantedby: "multi-user.target"
cops_drupal_reconfigure: "{{vars['cops_drupal_provision_dir']}}/reconfigure.sh"
cops_drupal_reconfigure_passenv: >
  COPS_ROOT COPS_IMG NO_SILENT NO_OUTPUT NONINTERACTIVE
  ANSIBLE_CWD ANSIBLE_PLAY ANSIBLE_VARARGS ANSIBLE_ARGS
  A_VAULTS_FOLDERS A_VAULTS A_EXTRA_VAULTS
  A_INVENTORY A_ENV_NAME NO_DEFAULT_VAULTS
cops_drupal_reconfigure_verbosity: "-v"
# Code synchronnisation settings
cops_drupal_push_codes_cwd: "{{vars['cops_cwd']}}"
cops_drupal_push_codes_sync_mode: "{{ (
  cops_installer_mode in ['vagrant'] or
  ansible_virtualization_type in ['docker']
  ) and 'rsync' or 'git' }}"
cops_drupal_push_codes_file_tests: "{{vars['cops_drupal_push_codes_file_tests___default']}}"
cops_drupal_push_codes_file_tests___default:
  git: []
  rsync: ["composer.json", "composer.lock", ".git"]
cops_drupal_push_codes_rsync_opts: "{{vars['cops_drupal_push_codes_rsync_opts___default']}}"
cops_drupal_push_codes_rsync_opts___default:
  git:   ["-azv",                           "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
  rsync: ["-azv", "--include", ".git/**/*", "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
cops_drupal_push_codes_rsync_submodule_opts: "{{vars['cops_drupal_push_codes_rsync_submodule_opts___default']}}"
cops_drupal_push_codes_rsync_submodule_opts___default:
  git:   ["-azv", "--exclude", "*.retry"]
  rsync: ["-azv", "--exclude", "*.retry"]
cops_drupal_push_codes: "{{vars['cops_drupal_push_codes___default']}}"
cops_drupal_push_codes___default:
- path: "{{vars['cops_drupal_project_root']}}"
  origin_path: "{{vars['cops_drupal_push_codes_cwd']}}"
  sync_mode: "{{cops_drupal_push_codes_sync_mode}}"
  rsync_opts: "{{cops_drupal_push_codes_rsync_opts[cops_drupal_push_codes_sync_mode]}}"
  file_tests: "{{cops_drupal_push_codes_file_tests[cops_drupal_push_codes_sync_mode]}}"
  owner: "{{vars['cops_drupal_user']}}"
  group: "{{vars['cops_drupal_group']}}"
  sub_paths:
  - path: local/setups.drupal
    rsync_opts: "{{cops_drupal_push_codes_rsync_submodule_opts[cops_drupal_push_codes_sync_mode]}}"
    is_submodule: true
# SSH deploy settings -> env vault
cops_deploy_ssh_key_paths: "{{vars['cops_deploy_ssh_key_paths___default']}}"
cops_deploy_ssh_key_paths___default:
  deploy:
    path: "{{'local/.ssh/deploy_key'|copsf_abspath}}"
    pub: "{{cops_deploy_ssh_pub_key|default('')}}"
    #  ssh-rsa xxx x@y
    # should be in encypted vault
    private: "{{cops_deploy_ssh_key|default('')}}"
    # -----BEGIN RSA PRIVATE KEY-----
    # -----END RSA PRIVATE KEY-----
# Reverse proxy Nginx
cops_drupal_default_vhost_is_default_server: false
cops_drupal_nginx_domain: "{{vars['cops_drupal_domain']}}"
cops_drupal_nginx_server_aliases: "{{vars['cops_drupal_nginx_server_aliases___default']}}"
cops_drupal_nginx_server_aliases___default:
  - "www.{{vars['cops_drupal_domain']}}"
cops_drupal_nginx_redirect_aliases: true
cops_drupal_htpasswd: "/etc/nginx/{{vars['cops_drupal_name']}}-htpasswd"
# set to true to activate HTTP Basic auth
cops_drupal_http_auth_restricted: false
cops_drupal_http_users: "{{vars['cops_drupal_http_users___default']}}"
cops_drupal_http_users___default:
- {user: "{{vars['cops_drupal_local_settings_account_name']}}",
   password: "{{vars['cops_drupal_local_settings_site_password']}}"}
#  - {user: name, password: foobar}
cops_drupal_ssl_protected: false
cops_drupal_nginx: {}
cops_drupal_nginx_port: "80"
cops_drupal_nginx_content_template: "../templates/nginx.conf"
cops_drupal_nginx_top_template: "../templates/nginx.top.conf"
cops_drupal_nginx_basename: "corpus-{{vars['cops_drupal_name']}}"
cops_drupal_nginx_is_default_server: true
cops_drupal_nginx_ssl_protected: "{{vars['cops_drupal_ssl_protected']}}"
cops_drupal_nginx_htpasswd: "{{vars['cops_drupal_htpasswd']}}"
cops_drupal_nginx_ssl_cert: ""
cops_drupal_nginx_ssl_key: ""
cops_drupal_nginx_loglevel: crit
cops_drupal_nginx_upstream_name: "{{vars['cops_drupal_name']}}"
cops_drupal_nginx_doc_root: "{{vars['cops_drupal_project_root']}}/www"
cops_drupal_nginx_maintenance_page: "/index_maintenance.html"
cops_drupal_maintenance_trigger_seconds: 30
cops_drupal_services_nginx_reload_state: "reloaded"
# PHP-Fpm
cops_drupal_fpm_ping: "/ping"
cops_drupal_fpm_reload_action: null
cops_drupal_fpm_domain: "{{vars['cops_drupal_domain']}}"
cops_drupal_fpm_pool_root: "{{vars['cops_drupal_project_root']}}"
cops_drupal_fpm_doc_root: "{{vars['cops_drupal_project_root']}}/www"
cops_drupal_fpm_name: "{{vars['cops_drupal_name']}}"
cops_drupal_fpm_display_errors: 0
cops_drupal_fpm_xdebug_profiler_enable_trigger: 0
cops_drupal_fpm_open_basedir: "{{vars['cops_drupal_fpm_open_basedir___default']}}"
cops_drupal_fpm_open_basedir___default:
  - "{{vars['cops_drupal_data_root']}}/sites"
  - "{{vars['cops_drupal_data_root']}}/var/sites"
  - "{{vars['cops_drupal_data_root']}}/var/log"
  - "{{vars['cops_drupal_data_root']}}/var/tmp"
  - "{{vars['cops_drupal_data_root']}}/var/private"
  - "{{vars['cops_drupal_project_root']}}/www"
  - "{{vars['cops_drupal_project_root']}}/lib"
  - "{{vars['cops_drupal_project_root']}}/vendor"
  - "{{vars['cops_drupal_project_root']}}/var/tmp"
  - "{{vars['cops_drupal_project_root']}}/var/private"
cops_drupal_fpm_include_path: "{{vars['cops_drupal_fpm_include_path___default']}}"
cops_drupal_fpm_include_path___default:
  - "{{vars['cops_drupal_project_root']}}/www"
  - "{{vars['cops_drupal_project_root']}}/lib"
  - "{{vars['cops_drupal_project_root']}}/vendor"
cops_drupal_php_extensions: "{{vars['cops_drupal_php_extensions___default']}}"
cops_drupal_php_extensions___default:
  - {ext: mbstring, exts: [tokenizer]}
cops_drupal_fpm_listen: "127.0.0.1:9000"
cops_drupal_fpm_session_auto_start: 0
cops_drupal_fpm_allow_url_fopen: 0
cops_drupal_fpm_upload_max_filesize: "50M"
cops_drupal_fpm_max_input_vars: 2000
cops_drupal_fpm_user: "{{vars['cops_drupal_name']}}-php"
cops_drupal_fpm_group: "{{vars['cops_drupal_group']}}"
cops_drupal_fpm_memory_limit: "256M"
cops_drupal_fpm_modules: {}
# Composer settings
cops_drupal_composer_install_args: "--no-dev --prefer-dist --optimize-autoloader"
# Dbsmartbackup settings
cops_drupal_dbsmartbackup: {}
cops_drupal_dbsmartbackup_name: "{{vars['cops_drupal_name']}}"
cops_drupal_dbsmartbackup_type: "{{(
   cops_drupal_db_role_type[cops_drupal_db_type])}}"
# vim:set ft=sls:
