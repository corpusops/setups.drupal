---
corpusops_core_projects_path: /srv/projects
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_drupal__supereditors_paths:
  - "{project_root}"
  - "{data_root}"
# space separated string of uids to allow to write inside
# projetct directories (used in development through posix ACLS setter)
cops_drupal__supereditors: >-
  {{ ansible_env.get(
      'SUPEREDITORS', cops_supereditors|default('')
     ) | copsf_splitstrip | to_json }}
cops_drupal_supereditors_paths: "{_supereditors_paths}"
cops_drupal_supereditors: "{_supereditors}"
cops_drupal_deb_packages:
    - unzip
    - xsltproc
    - curl
    - "{{corpusops_localsettings_php_vars['spackages_{0}'.format(cops_drupal_db_type)]}}"
    - "{{ corpusops_localsettings_php_vars.spackages_gd }}"
    - "{{ corpusops_localsettings_php_vars.spackages_cli }}"
    - "{{ corpusops_localsettings_php_vars.spackages_curl }}"
    - "{{ corpusops_localsettings_php_vars.spackages_ldap }}"
    - "{{ corpusops_localsettings_php_vars.spackages_dev }}"
    - "{{ corpusops_localsettings_php_vars.spackages_json }}"
    - "{{ corpusops_localsettings_php_vars.spackages_redis }}"
    - "{{ corpusops_localsettings_php_vars.spackages_gmp }}"
    - "{{ corpusops_localsettings_php_vars.spackages_mbstring }}"
    - "{{ corpusops_localsettings_php_vars.spackages_dom}}"
    - python-passlib
    - sqlite3
    - libsqlite3-dev
    - apache2-utils
    - autoconf
    - automake
    - build-essential
    - bzip2
    - gettext
    - git
    - groff
    - libbz2-dev
    - libcurl4-openssl-dev
    - libdb-dev
    - libgdbm-dev
    - libreadline-dev
    - libfreetype6-dev
    - libsigc++-2.0-dev
    - libsqlite0-dev
    - libsqlite3-dev
    - libtiff5
    - libtiff5-dev
    - libwebp5
    - libwebp-dev
    - libssl-dev
    - libtool
    - libxml2-dev
    - libxslt1-dev
    - libopenjpeg-dev
    - m4
    - man-db
    - pkg-config
    - poppler-utils
    - wv
    - zlib1g-dev
cops_drupal_rh_packages: []
# extra conf to add to pgconf (directly added to a tuning conf file (string))
cops_drupal_sysctls: []
cops_drupal_domain: "{{ansible_fqdn}}"
# for internal monitoring
cops_drupal_query_host: "127.0.0.1"
cops_drupal_name: 'drupal'
cops_drupal_user: "{name}-user"
cops_drupal_group: "{name}-group"
cops_drupal_projects_dir: '{{corpusops_vars.projects_path}}'
cops_drupal_project_dir: '{projects_dir}/{name}'
cops_drupal_project_root: "{project_dir}/project"
cops_drupal_data_root: "{project_dir}/data"
cops_drupal_cfg: "{data_root}/config"
cops_drupal_fixperms: "{project_dir}/fixperms.sh"
cops_drupal_fixperms_cron: "/etc/cron.d/{name}-fixperms"
cops_drupal_admins: 'sysadmin@{domain}'
cops_drupal_tz: "Europe/Paris"
cops_drupal_country: "FR"
cops_drupal_update_status_module: 0
cops_drupal_local_settings_cache: 0
cops_drupal_local_settings_cache_block: 0
cops_drupal_local_settings_reverse_proxy_header: 'HTTP_X_FORWARDED_FOR'
cops_drupal_local_settings_page_compression: 0
cops_drupal_local_settings_js_gzip_compression: 1
cops_drupal_local_settings_css_gzip_compression: 1
cops_drupal_local_settings_page_cache_maximum_age: 21600
cops_drupal_local_settings_drupal_hash: null
cops_drupal_local_settings_site_password: null
cops_drupal_local_settings_account_name: 'admin'
cops_drupal_local_settings_account_email: 'root@{{ansible_fqdn}}'
cops_drupal_local_settings_site_email: 'root@{{ansible_fqdn}}'
cops_drupal_local_settings_site_name: "{name}"
cops_drupal_local_settings_reverse_proxy: 'TRUE'
cops_drupal_local_settings_reverse_proxy_addresses: "array('127.0.0.1', '10.5.0.1')"
cops_drupal_local_settings_image_allow_insecure_derivatives: 0
cops_drupal_local_settings_reroute_email_enable: 0
cops_drupal_local_settings_reroute_email_address: 'sysadmin@{{ansible_fqdn}}'
cops_drupal_local_settings_image_jpeg_quality: 100
cops_drupal_local_settings_locale_cache_length: 204800
cops_drupal_local_settings_cookie_cache_bypass_adv_cache_lifetime: 300
cops_drupal_local_settings_file_chmod_directory: '02770'
cops_drupal_local_settings_file_chmod_file: '0660'
cops_drupal_local_settings_error_level: 0
cops_drupal_local_settings_preprocess_css: 0
cops_drupal_local_settings_preprocess_js: 0
cops_drupal_local_settings_base_url: 'default'
cops_drupal_local_settings_omit_vary_cookie: 'FALSE'
cops_drupal_local_settings_conf_sync_dir: '{project_root}/lib/config/sync'
cops_drupal_local_settings_conf_staging_dir: '{project_root}/lib/config/staging'
cops_drupal_local_settings_conf_todev_dir: '{project_root}/lib/config/to_dev'
cops_drupal_local_settings_smtp_used: True
cops_drupal_local_settings_smtp_host: '127.0.0.1'
cops_drupal_local_settings_smtp_from: 'root@{{ansible_fqdn}}'
cops_drupal_local_settings_smtp_fromname: ''
cops_drupal_local_settings_block_cache_bypass_node_grants: 1
cops_drupal_secret_variables:
  - local_settings_site_password
  - local_settings_drupal_hash
cops_drupal_cops_format_resolve_topdb: false
cops_drupal_cops_do_format_resolve: true
cops_drupal_cops_sub_namespaces:
  nginx: {}
  fpm: {}
  s: {}
  lifecycle: {}
  local_settings: {smtp: {}}
  force: {}
cops_drupal_use_etc_hosts: true
# set to 8 for d8, anything else for others
cops_drupal_drupal_version: 8
# This is "new_site" for the 1st player,
# and "sync" after that (to get the same UUIDs)
cops_drupal_d8_install_mode: "sync"
cops_drupal_drupal_profile: example_profile
cops_drupal_drush_make_opts: "--no-cache --translations={drupal_locale}"
cops_drupal_drush_make: "profiles/{drupal_profile}/{drupal_profile}.make"
cops_drupal_use_microcache: false
cops_drupal_drupal_locale: fr
cops_drupal_drupal_cron_enabled: true
cops_drupal_drupal_xmlrpc_enabled: false
cops_drupal_drupal_authorize_enabled: false
cops_drupal_drupal_update_enabled: false
cops_drupal_drupal_uri: "http://{domain}"
cops_drupal_drush_make_args: "profiles/{drupal_profile}/{drupal_profile}.make"
# uncomment if you use -- elysia cron --
cops_drupal_fixperms_cron_periodicity: "*/30 * * * *"
# how many minutes before rmoving lock file of a currently running cro
# this can be used outside of drupal, to avoid internal locks and messages
# about cron already running
cops_drupal_cron_activated: true
cops_drupal_cron_periodicity: "*/5 * * * *"
cops_drupal_cron_lock_minutes: 60
cops_drupal_cron_user: "{name}-php"
cops_drupal_cron_elysia_cmd: >-
  cd {project_root}/www &&
  ../sbin/drush --root={project_root}/www
  --uri={domain} elysia-cron run >${LOG} 2>&1
cops_drupal_cron_mail: true
cops_drupal_cron_cmd:  "{cron_elysia_cmd}"
cops_drupal_cron_stock_cmd: >-
  cd {project_root}/www &&
  ../sbin/drush --root={project_root}/www
  --uri={domain} cron -y >${LOG} 2>&1
cops_drupal_password: "secret"
# if a special php is needed for drush, set the path here
cops_drupal_modules_dir: "{project_root}/www/sites/all/modules"
cops_drupal_modules_check: "ctools webform token pathauto"
cops_drupal_php: ''
# this will force a drush install
# you can also use a data/force_install file for one-time things
cops_drupal_force_install: 0
# this will force a drush make
#  (set to 0 for special manual updates)
cops_drupal_force_update_db: 1
# this will remove maintenance mode after code update
#  (set to 0 for special manual updates, then do not forget the "drush vset maintenance_mode 0")
cops_drupal_force_remove_maintenance: 1
# this will remove the cron suspension after code update
# (set to 0 for special manual updates, then rm data/suspend_cron to re-enable crons)
remove_suspend_cron: 1
cops_drupal_db_prefix: ""
cops_drupal_db_type: pgsql
cops_drupal_db_host: "127.0.0.1"
cops_drupal_db_name: "{name}"
cops_drupal_db_password: "{db_name}"
cops_drupal_db_user: "{db_name}"
cops_drupal_db_port: null
cops_drupal_db_url: "{db_type}://{db_user}:{db_password}@{db_host}:{db_port}/{db_name}"
# overrides this dir with values of cops_drupal_env !
cops_drupal_env_overrides: {}
cops_drupal_env: {}
#  PGPASSWORD: foobar
cops_drupal_drupal_bind_host: '127.0.0.1'
# templates
## entry point
cops_drupal_ep_vaults:
  - /setup/reconfigure.yml
cops_drupal_ep_template: "../templates/app_entry_point"
# entrypoint settings, tags for cli and vars for playbook reuse via
# conditionals
cops_drupal_ep_playbook: "site.yml"
cops_drupal_ep_skip_tags: "{{(
  'cops_drupal_s_users,'
  'cops_drupal_s_first_fixperms,'
  'cops_drupal_s_prerequisites,'
  'cops_drupal_s_setup,'
  'cops_drupal_s_workers,'
  'cops_drupal_s_entry_point,'
  'cops_drupal_s_manage_content,'
  'cops_drupal_s_end_fixperms'
  )}}"
cops_drupal_ep_post_start_skip_tags: "{{(
  'cops_drupal_s_users,'
  'cops_drupal_s_first_fixperms,'
  'cops_drupal_s_prerequisites,'
  'cops_drupal_s_setup_maintenance,'
  'cops_drupal_s_setup_composer,'
  'cops_drupal_s_workers,'
  'cops_drupal_s_entry_point,'
  )}}"
# global orchestration steps (db, code sync, web & workers prereqs, drupal config)
cops_drupal_become: true
cops_drupal_lifecycle_db: true
cops_drupal_lifecycle_db_servers: true
cops_drupal_lifecycle_db_objects: true
cops_drupal_lifecycle_app: true
cops_drupal_lifecycle_app_push_code: true
cops_drupal_lifecycle_app_nginx: true
cops_drupal_lifecycle_app_fpm: true
cops_drupal_lifecycle_app_setup: true
# drupal & project deployment steps
cops_drupal_s_vars: true
cops_drupal_s_users: true
cops_drupal_s_users_user: true
cops_drupal_s_users_group: true
cops_drupal_s_users_fpm_user: true
cops_drupal_s_users_fpm_group: true
cops_drupal_s_layout: true
cops_drupal_s_layout_layout: true
cops_drupal_s_first_fixperms: true
cops_drupal_s_fixperms_configs: true
cops_drupal_s_fixperms_run: true
cops_drupal_s_prerequisites: true
cops_drupal_s_prerequisites_pkgs: true
cops_drupal_s_setup: true
cops_drupal_s_setup_maintenance_on: true
cops_drupal_s_setup_configs: true
cops_drupal_s_setup_hosts: true
cops_drupal_s_setup_composer: true
cops_drupal_s_setup_app: true
cops_drupal_s_setup_cron: true
cops_drupal_s_setup_maintenance_off: true
cops_drupal_s_fpm: true
cops_drupal_s_fpm_config: true
cops_drupal_s_fpm_config_vhost: true
cops_drupal_s_fpm_install: true
cops_drupal_s_reverse_proxy: true
cops_drupal_s_reverse_proxy_config: true
cops_drupal_s_reverse_proxy_config_dvhost: true
cops_drupal_s_reverse_proxy_config_vhost: true
cops_drupal_s_reverse_proxy_install: true
cops_drupal_s_reverse_proxy_users: true
cops_drupal_s_workers: true
cops_drupal_s_workers_service: true
cops_drupal_s_workers_checks: true
cops_drupal_s_entry_point: true
cops_drupal_s_manage_content: true
cops_drupal_s_end_fixperms: true
#
cops_drupal_ep_main_ep: "/entry_point"
cops_drupal_php_version: "7.1"
# service
cops_drupal_service: "php{php_version}-fpm"
cops_drupal_services:
- "{service}"
- "nginx"
cops_drupal_reconfigure_services: []
# use in docker (via a vault):
# cops_drupal_reconfigure_services: ["post-start-{service}"]
cops_drupal_rhandlers: [restart_cops_drupal]
cops_drupal_activated: true
#
cops_drupal_files:
  - {path: "{projects_dir}",
     owner: root, group: root, state: directory}
  - {path: "{project_dir}",
     owner: root, group: root, state: directory}
  - {path: "{project_root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{data_root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{cfg}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/vendor",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/lib",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/www/sites",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/bin",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/sbin",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{project_root}/www",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}751"}
  - {path: "{data_root}/var",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{data_root}/var/sites",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
  - {path: "{data_root}/var/sites/default/files",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}770"}
  - {path: "{data_root}/var/log",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}751"}
  - {path: "{data_root}/var/log/cron/{{ansible_fqdn}}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}750"}
 #- {path: "{data_root}/var/log/nginx",
 #    owner: "{user}", group: "{group}",
 #    state: directory, mode: "{stickymode}755"}
 # - {path: "{data_root}/var/log/php",
 #    owner: "{user}", group: "{group}",
 #    state: directory, mode: "{stickymode}755"}
  - {path: "{data_root}/var/private",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}770"}
  - {path: "{data_root}/var/tmp",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}770"}
  - {path: "{data_root}/var/run",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}770"}
  - {src: "{project_root}/www",                path: "{data_root}/www",         state: link, force: true}
  - {src: "{project_root}/lib",                path: "{data_root}/lib",         state: link, force: true}
  - {src: "{project_root}/vendor",             path: "{data_root}/vendor",      state: link, force: true}
  - {src: "{project_root}/bin",                path: "{data_root}/bin",         state: link, force: true}
  #
  - {path: "{project_root}/www/sites/default", src: "{data_root}/var/sites/default", state: link, force: true}
  - {path: "{project_root}/var",               src: "{data_root}/var",         state: link, force: true}
  - {path: "{project_root}/log",               src: "{data_root}/var/log",     state: link, force: true}
  - {path: "{project_root}/private",           src: "{data_root}/var/private", state: link, force: true}
  - {path: "{project_root}/tmp",               src: "{data_root}/var/tmp",     state: link, force: true}
  # check these files are NOT present
  - {path: "{project_root}/sbin/profile_conf.sh", state: absent, force: true}
  - {path: "{project_root}/sbin/composer.lock",   state: absent, force: true}
cops_drupal_composer_install_args: "--no-dev"
cops_drupal_reconfigure: "{project_dir}/reconfigure.sh"
cops_drupal_reconfigure_passenv: "ANSIBLE_PLAY ANSIBLE_FOLDER"
cops_drupal_configs:
  - {src: "../templates/default.settings.php",
     dest: "{project_root}/www/sites/default/settings.php",
     mode: "0640",
     owner: "{user}",
     group: "{group}"}
  - {src: "../templates/common.settings.php",
     dest: "{project_root}/www/sites/default/common.settings.php",
     mode: "0640",
     owner: "{user}",
     group: "{group}"}
  - {src: "../templates/local_conf.sh",
     dest: "{project_root}/sbin/local_conf.sh",
     mode: "0750",
     owner: "{user}",
     group: "root"}
cops_drupal_fixperms_configs:
  - {src: "../templates/fixperms.sh",
     dest: "{fixperms}", mode: "0755",
     owner: root, group: root}
cops_drupal_ep_configs:
  # script to reconfigure image before and after systemd is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{reconfigure}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{service}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "{ep_template}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
# Reverse proxy Nginx
cops_drupal_default_vhost_is_default_server: false
cops_drupal_nginx_domain: "{domain}"
cops_drupal_nginx_server_aliases:
  - "www.{domain}"
cops_drupal_nginx_redirect_aliases: true
cops_drupal_htpasswd: "/etc/nginx/{name}-htpasswd"
#cops_drupal_http_users: []
cops_drupal_http_users: []
#  - {user: name, password: foobar}
cops_drupal_ssl_protected: false
cops_drupal_nginx: {}
cops_drupal_nginx_port: "80"
cops_drupal_nginx_content_template: "{vrole_path}/templates/nginx.conf"
cops_drupal_nginx_top_template: "{vrole_path}/templates/nginx.top.conf"
cops_drupal_nginx_basename: "corpus-{name}"
cops_drupal_nginx_is_default_server: true
cops_drupal_nginx_ssl_protected: "{ssl_protected}"
cops_drupal_nginx_htpasswd: "{htpasswd}"
cops_drupal_nginx_force_reload: true
cops_drupal_nginx_ssl_cert: ""
cops_drupal_nginx_ssl_key: ""
cops_drupal_nginx_loglevel: crit
cops_drupal_nginx_upstream_name: "{name}"
cops_drupal_nginx_doc_root: "{project_root}/www"
cops_drupal_nginx_maintenance_page: "/index_maintenance.html"
cops_drupal_stickymode: "2"
cops_drupal_services_nginx_reload_state: "reloaded"
# PHP-Fpm
cops_drupal_fpm_ping: "/ping"
cops_drupal_fpm_domain: "{domain}"
cops_drupal_fpm_pool_root: "{project_root}"
cops_drupal_fpm_doc_root: "{project_root}/www"
cops_drupal_fpm_name: "{name}"
cops_drupal_fpm_display_errors: 0
cops_drupal_fpm_xdebug_profiler_enable_trigger: 0
cops_drupal_fpm_open_basedir:
  - "{data_root}/sites"
  - "{data_root}/var/sites"
  - "{data_root}/var/log"
  - "{data_root}/var/tmp"
  - "{data_root}/var/private"
  - "{project_root}/www"
  - "{project_root}/lib"
  - "{project_root}/vendor"
  - "{project_root}/var/tmp"
  - "{project_root}/var/private"
cops_drupal_fpm_include_path:
  - "{project_root}/www"
  - "{project_root}/lib"
  - "{project_root}/vendor"
cops_drupal_fpm_listen: "127.0.0.1:9000"
cops_drupal_fpm_session_auto_start: 0
cops_drupal_fpm_allow_url_fopen: 0
cops_drupal_fpm_upload_max_filesize: "50M"
cops_drupal_fpm_max_input_vars: 2000
cops_drupal_fpm_user: "{name}-php"
cops_drupal_fpm_group: "{group}"
cops_drupal_fpm_memory_limit: "256M"
cops_drupal_fpm_modules: {}
cops_drupal_push_codes_sync_mode: "{{ cops_installer_mode in ['vagrant'] and 'rsync' or 'git' }}"
cops_drupal_push_codes_file_tests:
  git: []
  rsync: ["composer.json", "composer.lock", ".git"]
cops_drupal_push_codes_rsync_opts:
  git:   ["-azv",                           "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
  rsync: ["-azv", "--include", ".git/**/*", "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
cops_drupal_push_codes_rsync_submodule_opts:
  git:   ["-azv", "--exclude", "*.retry"]
  rsync: ["-azv", "--exclude", "*.retry"]
cops_drupal_push_codes:
- path: "{project_root}"
  origin_path: "{cops_cwd}"
  sync_mode: "{{cops_drupal_push_codes_sync_mode}}"
  rsync_opts: "{{cops_drupal_push_codes_rsync_opts[cops_drupal_push_codes_sync_mode]}}"
  file_tests: "{{cops_drupal_push_codes_file_tests[cops_drupal_push_codes_sync_mode]}}"
  owner: "{user}"
  group: "{group}"
  sub_paths:
  - path: local/setups.drupal
    rsync_opts: "{{cops_drupal_push_codes_rsync_submodule_opts[cops_drupal_push_codes_sync_mode]}}"
    is_submodule: true
# vim:set ft=sls:
