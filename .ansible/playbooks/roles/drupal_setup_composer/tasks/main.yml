---
# Check that composer wrapper is WORKING
# composer should have been installed system wide by precedent provision
- name: Composer test
  shell: |
         set -e
         cd {{cops_drupal_vars.project_root}}/sbin
         {{cops_drupal_vars.project_root}}/sbin/{{item}} --version
  become: true
  become_user: "{{cops_drupal_vars.user}}"
  changed_when: false
  with_items: ['composer']


# composer should have been installed system wide by precedent provision
- name: Composer github api token
  shell: |
         set -e
         {{cops_drupal_vars.project_root}}/sbin/composer config -g github-oauth.github.com {{cops_drupal_vars.github_pat}}
  become: true
  become_user: "{{cops_drupal_vars.user}}"
  changed_when: false
  when:
  - cops_drupal_vars.github_pat|default('')|copsf_asbool


# FIXME: move that to configs ?
- name: initialize services config file (restricted perms)
  copy:
    content: ""
    force: false
    dest: "{{cops_drupal_vars.doc_root}}/sites/default/default.services.yml"
    mode: "0644"
    owner: "{{cops_drupal_vars.user}}"
    group: "{{cops_drupal_vars.group}}"
  changed_when: false

# Run composer install
- name: Composer install
  shell: |
         set -e
         cd {{cops_drupal_vars.project_root}}
         sbin/composer install {{cops_drupal_vars.composer_install_args}}
  become: true
  changed_when: false
  become_user: "{{cops_drupal_vars.user}}"
  register: cops_drupal_composer_run

# FIXME: kiorky you'll need to explain that to rle. Generating without force the
# service file and then testing size of that file to potentially run scaffold...
- name: Drupal scaffold
  shell: |
         set -ex
         cd {{cops_drupal_vars.project_root}}
         dsyml="{{cops_drupal_vars.doc_root}}/sites/default/default.services.yml"
         runc=""
         if grep -q "drupal-composer/drupal-scaffold" composer.json;then
            for al in \
              "{{cops_drupal_vars.doc_root}}/autoload.php" \
              "{{cops_drupal_vars.doc_root}}/index.php";do
              if [ ! -e "$al" ];then runc=1;fi
            done
            li=$(cat "${dsyml}" 2>/dev/null|wc -l)
            if [ $li -lt 5 ];then runc=1;fi
            if [ "x$runc" != "x" ];then
              echo "We have runscaffoldfromansible"
              sbin/composer run-script drupal-scaffold
            fi
         fi
  become: true
  become_user: "{{cops_drupal_vars.user}}"
  register: cops_drupal_composer_scaffold_run
  changed_when: "'runscaffoldfromansible' in cops_drupal_composer_scaffold_run.stdout"

# Check that drush wrapper in sbin is WORKING
# drush will come through composer install or artifact extraction
- name: drush test
  shell: |
         set -e
         cd {{cops_drupal_vars.project_root}}
         {{cops_drupal_vars.project_root}}/sbin/{{item}} version
  become: true
  become_user: "{{cops_drupal_vars.user}}"
  changed_when: false
  with_items: ['drush']
